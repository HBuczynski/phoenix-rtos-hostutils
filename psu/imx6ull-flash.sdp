# Syntax
# WAIT <vid> <pid>
# WRITE_FILE <F/S> <quoted string> [offset] [address] [size]
# Example:
#    WRITE_FILE F "phoenix-arm-imx6ull.img" 0 0xac000000 16384   # off=0 addr=0xac000000 size=16384
#    WRITE_FILE F "phoenix-arm-imx6ull.img" 16384 0xac000000     # off=16384 addr=0xac000000 size=<whole file>
# WRITE_REGISTER <address> <value> <format 8/16/32>
# Example:
#    WRITE_REGISTER -1 0 8 # special register -1 for psd, switches file to file 0
# JUMP_ADDRESS <address>
# ERROR_STATUS

# Wait for device
WAIT 0x15a2 0x80
ERROR_STATUS

# Load kernel part with DCD initializing DDR
WRITE_FILE F "phoenix-arm-imx6ull.img" 0 0x00907000 0x1000
# Jump to ivt_addr
JUMP_ADDRESS 0x00907400

# Load the rest of kernel
WAIT 0x15a2 0x80
ERROR_STATUS
# Write whole image
WRITE_FILE F "phoenix-arm-imx6ull.img" 0 0x80000000
 
WRITE_FILE S "\x00\x00\x00\x80\xff\xff\xff\x87\x00\x00\x00\x00\x00\x80\x1a\x48\x00\x00\x00\x00Ximx6ull-uart Ximx6ull-flash;-p;128;64;-r;jffs2;0;-p;64;64;-p;192;1856;-p;4032;16 Xpsd;/dev/flash0;/dev/flash1" 0 0x80000020
JUMP_ADDRESS 0x80000708

# Wait for psd and write files to flash
WAIT 0x15a2 0x7d
WRITE_FILE F "rootfs.img" 
#WRITE_REGISTER -1 1 8 # switch to second flash
#WRITE_FILE F "rootfs.img" 0
